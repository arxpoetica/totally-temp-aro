DROP TABLE IF EXISTS client.network_nodes;

CREATE TABLE client.network_nodes
(
	id bigserial,
	plan_id bigint REFERENCES client.plan ON DELETE CASCADE,
	lat double precision,
	lon double precision,
	node_type_id int references client.network_node_types,
	geog geography('POINT', 4326),
	CONSTRAINT network_nodes_pkey PRIMARY KEY (id)
);

SELECT AddGeometryColumn('client', 'network_nodes', 'geom', 4326, 'POINT', 2);


-- Add COs for Urban, Suburban, and Rural test zones for FTTP algorithm
-- Network nodes will now be added manually by the user or generated by the planning algorithms.
INSERT INTO client.network_nodes (node_type_id, geog, geom)
	SELECT
		(select t.id from client.network_node_types t where name = 'central_office' limit 1)::int, 
		Geography(ST_Centroid(wirecenters.geom))as geog,
		ST_Centroid(wirecenters.geom) as geom
		
	FROM
		aro.wirecenters
	WHERE
	  -- NYC Upper East Side (URBAN)
    wirecenters.wirecenter = 'NYCMNY79'
    OR
    -- Buffalo, New York (URBAN)
    wirecenters.wirecenter = 'BFLONYEL'
    OR
    wirecenters.wirecenter = 'BFLONYFR'
    OR
    -- Orchard Park, NY (SUBURBAN)
    wirecenters.wirecenter = 'ORPKNYST'
    OR
    -- North Collins, NY (RURAL)
    wirecenters.wirecenter = 'NCLNNYNO';



CREATE INDEX client_network_nodes_geom_gist ON client.network_nodes USING gist (geom);
CREATE INDEX client_network_nodes_geog_gist ON client.network_nodes USING gist (geog);
CREATE INDEX client_network_nodes_route_index ON client.network_nodes(plan_id);