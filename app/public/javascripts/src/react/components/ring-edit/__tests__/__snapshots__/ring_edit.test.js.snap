// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Can edit 1`] = `
<div>
  <div
    className="m-2 p-2"
  >
    <button
      className="btn btn-sm btn-light"
      id="btnRingNewRing"
      onClick={[Function]}
    >
      <i
        className="fas fa-pencil-alt"
      />
       Add Ring
    </button>
  </div>
  <div
    className="m-2 p-2"
  >
    <h4>
      Rings
    </h4>
    <table
      className="table table-sm table-striped"
    >
      <tbody>
        <tr
          key="49"
        >
          <td>
            <div
              id="btnRingSelect_49"
              onClick={[Function]}
            >
              south
            </div>
          </td>
        </tr>
        <tr
          key="48"
        >
          <td
            className="ring-table-item-selected"
          >
            <div
              className="ring-table-item-title ring-table-item-title-selected clearfix"
            >
              north
              <button
                className="btn btn-sm btn-outline-danger ring-del-btn"
                data-placement="bottom"
                data-toggle="tooltip"
                id="btnRingDel_48"
                onClick={[Function]}
                title="Delete"
              >
                <i
                  className="fa ei-button-icon ng-scope fa-trash-alt"
                />
              </button>
              <input
                className="form-control form-control-sm ring-text-inp"
                id="inpRingName_48"
                onBlur={[Function]}
                onKeyDown={[Function]}
                placeholder="rename"
                type="text"
              />
            </div>
            <div
              className="ring-sub-table"
            >
              <table
                className="table table-sm table-striped"
              >
                <tbody>
                  <tr
                    className="m-2 p-2"
                    key="48_7d3495ce-59be-4900-8189-33e09dec49fb"
                  >
                    <td>
                      7d3495ce-59be-4900-8189-33e09dec49fb
                      <button
                        className="btn btn-sm btn-outline-danger ring-del-btn"
                        data-placement="bottom"
                        data-toggle="tooltip"
                        id="btnNodeDel_48-7d3495ce-59be-4900-8189-33e09dec49fb"
                        onClick={[Function]}
                        title="Delete"
                      >
                        <i
                          className="fa ei-button-icon ng-scope fa-trash-alt"
                        />
                      </button>
                    </td>
                  </tr>
                  <tr
                    className="m-2 p-2"
                    key="48_f49632eb-c747-4d7f-9797-574f7796afbd"
                  >
                    <td>
                      f49632eb-c747-4d7f-9797-574f7796afbd
                      <button
                        className="btn btn-sm btn-outline-danger ring-del-btn"
                        data-placement="bottom"
                        data-toggle="tooltip"
                        id="btnNodeDel_48-f49632eb-c747-4d7f-9797-574f7796afbd"
                        onClick={[Function]}
                        title="Delete"
                      >
                        <i
                          className="fa ei-button-icon ng-scope fa-trash-alt"
                        />
                      </button>
                    </td>
                  </tr>
                  <tr
                    className="m-2 p-2"
                    key="48_267987d6-819a-4b25-a819-9d4a7e486d74"
                  >
                    <td>
                      267987d6-819a-4b25-a819-9d4a7e486d74
                      <button
                        className="btn btn-sm btn-outline-danger ring-del-btn"
                        data-placement="bottom"
                        data-toggle="tooltip"
                        id="btnNodeDel_48-267987d6-819a-4b25-a819-9d4a7e486d74"
                        onClick={[Function]}
                        title="Delete"
                      >
                        <i
                          className="fa ei-button-icon ng-scope fa-trash-alt"
                        />
                      </button>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
  <ReduxForm
    destroyOnUnmount={true}
    enableReinitialize={true}
    forceUnregisterOnUnmount={false}
    form="ringOptions"
    getFormState={[Function]}
    initialValues={
      Object {
        "conduitBufferSize": Object {
          "displayName": "Conduit buffer size",
          "value": 500,
        },
        "locationBufferSize": Object {
          "displayName": "Location buffer size",
          "value": 500,
        },
        "maxConnectionDistance": Object {
          "displayName": "Connection distance",
          "value": 20,
        },
        "maxLocationEdgeDistance": Object {
          "displayName": "Max location-edge distance",
          "value": 400,
        },
        "maxWormholeDistance": Object {
          "displayName": "Wormhole distance",
          "value": 40,
        },
        "ringComplexityCount": Object {
          "displayName": "Ring complexity",
          "value": 3000000,
        },
        "snappingDistance": Object {
          "displayName": "Snapping distance",
          "value": 1,
        },
        "targetEdgeTypes": Object {
          "duct": Object {
            "displayName": "Duct",
            "value": false,
          },
          "road": Object {
            "displayName": "Road",
            "value": true,
          },
          "sewer": Object {
            "displayName": "Sewer",
            "value": true,
          },
        },
      }
    }
    keepDirtyOnReinitialize={false}
    persistentSubmitErrors={false}
    pure={true}
    shouldAsyncValidate={[Function]}
    shouldError={[Function]}
    shouldValidate={[Function]}
    shouldWarn={[Function]}
    submitAsSideEffect={false}
    touchOnBlur={true}
    touchOnChange={false}
    updateUnregisteredFields={false}
  />
</div>
`;

exports[`Can't edit 1`] = `
<div>
  <div
    className="m-2 p-2"
  >
    <h4>
      Rings
    </h4>
    <table
      className="table table-sm table-striped"
    >
      <tbody>
        <tr
          key="49"
        >
          <td>
            <div
              id="btnRingSelect_49"
              onClick={[Function]}
            >
              south
            </div>
          </td>
        </tr>
        <tr
          key="48"
        >
          <td
            className="ring-table-item-selected"
          >
            <div
              className="ring-table-item-title ring-table-item-title-selected clearfix"
            >
              north
            </div>
            <div
              className="ring-sub-table"
            >
              <table
                className="table table-sm table-striped"
              >
                <tbody>
                  <tr
                    className="m-2 p-2"
                    key="48_7d3495ce-59be-4900-8189-33e09dec49fb"
                  >
                    <td>
                      7d3495ce-59be-4900-8189-33e09dec49fb
                    </td>
                  </tr>
                  <tr
                    className="m-2 p-2"
                    key="48_f49632eb-c747-4d7f-9797-574f7796afbd"
                  >
                    <td>
                      f49632eb-c747-4d7f-9797-574f7796afbd
                    </td>
                  </tr>
                  <tr
                    className="m-2 p-2"
                    key="48_267987d6-819a-4b25-a819-9d4a7e486d74"
                  >
                    <td>
                      267987d6-819a-4b25-a819-9d4a7e486d74
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
  <ReduxForm
    destroyOnUnmount={true}
    enableReinitialize={true}
    forceUnregisterOnUnmount={false}
    form="ringOptions"
    getFormState={[Function]}
    initialValues={
      Object {
        "conduitBufferSize": Object {
          "displayName": "Conduit buffer size",
          "value": 500,
        },
        "locationBufferSize": Object {
          "displayName": "Location buffer size",
          "value": 500,
        },
        "maxConnectionDistance": Object {
          "displayName": "Connection distance",
          "value": 20,
        },
        "maxLocationEdgeDistance": Object {
          "displayName": "Max location-edge distance",
          "value": 400,
        },
        "maxWormholeDistance": Object {
          "displayName": "Wormhole distance",
          "value": 40,
        },
        "ringComplexityCount": Object {
          "displayName": "Ring complexity",
          "value": 3000000,
        },
        "snappingDistance": Object {
          "displayName": "Snapping distance",
          "value": 1,
        },
        "targetEdgeTypes": Object {
          "duct": Object {
            "displayName": "Duct",
            "value": false,
          },
          "road": Object {
            "displayName": "Road",
            "value": true,
          },
          "sewer": Object {
            "displayName": "Sewer",
            "value": true,
          },
        },
      }
    }
    keepDirtyOnReinitialize={false}
    persistentSubmitErrors={false}
    pure={true}
    shouldAsyncValidate={[Function]}
    shouldError={[Function]}
    shouldValidate={[Function]}
    shouldWarn={[Function]}
    submitAsSideEffect={false}
    touchOnBlur={true}
    touchOnChange={false}
    updateUnregisteredFields={false}
  />
</div>
`;

exports[`Delete ring 1`] = `
<div>
  <div
    className="m-2 p-2"
  >
    <button
      className="btn btn-sm btn-light"
      id="btnRingNewRing"
      onClick={[Function]}
    >
      <i
        className="fas fa-pencil-alt"
      />
       Add Ring
    </button>
  </div>
  <div
    className="m-2 p-2"
  >
    <h4>
      Rings
    </h4>
    <table
      className="table table-sm table-striped"
    >
      <tbody>
        <tr
          key="49"
        >
          <td>
            <div
              id="btnRingSelect_49"
              onClick={[Function]}
            >
              south
            </div>
          </td>
        </tr>
        <tr
          key="48"
        >
          <td
            className="ring-table-item-selected"
          >
            <div
              className="ring-table-item-title ring-table-item-title-selected clearfix"
            >
              north
              <button
                className="btn btn-sm btn-outline-danger ring-del-btn"
                data-placement="bottom"
                data-toggle="tooltip"
                id="btnRingDel_48"
                onClick={[Function]}
                title="Delete"
              >
                <i
                  className="fa ei-button-icon ng-scope fa-trash-alt"
                />
              </button>
              <input
                className="form-control form-control-sm ring-text-inp"
                id="inpRingName_48"
                onBlur={[Function]}
                onKeyDown={[Function]}
                placeholder="rename"
                type="text"
              />
            </div>
            <div
              className="ring-sub-table"
            >
              <table
                className="table table-sm table-striped"
              >
                <tbody>
                  <tr
                    className="m-2 p-2"
                    key="48_7d3495ce-59be-4900-8189-33e09dec49fb"
                  >
                    <td>
                      7d3495ce-59be-4900-8189-33e09dec49fb
                      <button
                        className="btn btn-sm btn-outline-danger ring-del-btn"
                        data-placement="bottom"
                        data-toggle="tooltip"
                        id="btnNodeDel_48-7d3495ce-59be-4900-8189-33e09dec49fb"
                        onClick={[Function]}
                        title="Delete"
                      >
                        <i
                          className="fa ei-button-icon ng-scope fa-trash-alt"
                        />
                      </button>
                    </td>
                  </tr>
                  <tr
                    className="m-2 p-2"
                    key="48_f49632eb-c747-4d7f-9797-574f7796afbd"
                  >
                    <td>
                      f49632eb-c747-4d7f-9797-574f7796afbd
                      <button
                        className="btn btn-sm btn-outline-danger ring-del-btn"
                        data-placement="bottom"
                        data-toggle="tooltip"
                        id="btnNodeDel_48-f49632eb-c747-4d7f-9797-574f7796afbd"
                        onClick={[Function]}
                        title="Delete"
                      >
                        <i
                          className="fa ei-button-icon ng-scope fa-trash-alt"
                        />
                      </button>
                    </td>
                  </tr>
                  <tr
                    className="m-2 p-2"
                    key="48_267987d6-819a-4b25-a819-9d4a7e486d74"
                  >
                    <td>
                      267987d6-819a-4b25-a819-9d4a7e486d74
                      <button
                        className="btn btn-sm btn-outline-danger ring-del-btn"
                        data-placement="bottom"
                        data-toggle="tooltip"
                        id="btnNodeDel_48-267987d6-819a-4b25-a819-9d4a7e486d74"
                        onClick={[Function]}
                        title="Delete"
                      >
                        <i
                          className="fa ei-button-icon ng-scope fa-trash-alt"
                        />
                      </button>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
  <ReduxForm
    destroyOnUnmount={true}
    enableReinitialize={true}
    forceUnregisterOnUnmount={false}
    form="ringOptions"
    getFormState={[Function]}
    initialValues={
      Object {
        "conduitBufferSize": Object {
          "displayName": "Conduit buffer size",
          "value": 500,
        },
        "locationBufferSize": Object {
          "displayName": "Location buffer size",
          "value": 500,
        },
        "maxConnectionDistance": Object {
          "displayName": "Connection distance",
          "value": 20,
        },
        "maxLocationEdgeDistance": Object {
          "displayName": "Max location-edge distance",
          "value": 400,
        },
        "maxWormholeDistance": Object {
          "displayName": "Wormhole distance",
          "value": 40,
        },
        "ringComplexityCount": Object {
          "displayName": "Ring complexity",
          "value": 3000000,
        },
        "snappingDistance": Object {
          "displayName": "Snapping distance",
          "value": 1,
        },
        "targetEdgeTypes": Object {
          "duct": Object {
            "displayName": "Duct",
            "value": false,
          },
          "road": Object {
            "displayName": "Road",
            "value": true,
          },
          "sewer": Object {
            "displayName": "Sewer",
            "value": true,
          },
        },
      }
    }
    keepDirtyOnReinitialize={false}
    persistentSubmitErrors={false}
    pure={true}
    shouldAsyncValidate={[Function]}
    shouldError={[Function]}
    shouldValidate={[Function]}
    shouldWarn={[Function]}
    submitAsSideEffect={false}
    touchOnBlur={true}
    touchOnChange={false}
    updateUnregisteredFields={false}
  />
</div>
`;

exports[`With no rings 1`] = `
<div>
  <div
    className="m-2 p-2"
  >
    <h4>
      Rings
    </h4>
    <table
      className="table table-sm table-striped"
    >
      <tbody />
    </table>
  </div>
  <ReduxForm
    destroyOnUnmount={true}
    enableReinitialize={true}
    forceUnregisterOnUnmount={false}
    form="ringOptions"
    getFormState={[Function]}
    initialValues={
      Object {
        "conduitBufferSize": Object {
          "displayName": "Conduit buffer size",
          "value": 500,
        },
        "locationBufferSize": Object {
          "displayName": "Location buffer size",
          "value": 500,
        },
        "maxConnectionDistance": Object {
          "displayName": "Connection distance",
          "value": 20,
        },
        "maxLocationEdgeDistance": Object {
          "displayName": "Max location-edge distance",
          "value": 400,
        },
        "maxWormholeDistance": Object {
          "displayName": "Wormhole distance",
          "value": 40,
        },
        "ringComplexityCount": Object {
          "displayName": "Ring complexity",
          "value": 3000000,
        },
        "snappingDistance": Object {
          "displayName": "Snapping distance",
          "value": 1,
        },
        "targetEdgeTypes": Object {
          "duct": Object {
            "displayName": "Duct",
            "value": false,
          },
          "road": Object {
            "displayName": "Road",
            "value": true,
          },
          "sewer": Object {
            "displayName": "Sewer",
            "value": true,
          },
        },
      }
    }
    keepDirtyOnReinitialize={false}
    persistentSubmitErrors={false}
    pure={true}
    shouldAsyncValidate={[Function]}
    shouldError={[Function]}
    shouldValidate={[Function]}
    shouldWarn={[Function]}
    submitAsSideEffect={false}
    touchOnBlur={true}
    touchOnChange={false}
    updateUnregisteredFields={false}
  />
</div>
`;
