<persistence xmlns="http://java.sun.com/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
	version="2.0">

	<persistence-unit name="com.altvil.aro.persistence.postgis">
		<description>
            Persistence unit for PostGIS
        </description>

		<!-- NOTE when this is pulled out of the jar to provide environment-level 
			persistence, it must reference classes explicitly. -->
		<!-- OR you must have a different solution such as a configuration loader 
			which populates the class info another way -->
		<class>com.altvil.aro.model.GraphModel</class>
		<class>com.altvil.aro.model.NetworkNode</class>

		<properties>

			<property name="hibernate.current_session_context_class"
				value="managed" />

			<property name="hibernate.temp.use_jdbc_metadata_defaults"
				value="false" />

			<property name="hibernate.connection.provider_class"
				value="org.hibernate.connection.C3P0ConnectionProvider" />

			<property name="hibernate.c3p0.max_size" value="5" />
			<property name="hibernate.c3p0.min_size" value="1" />
			<property name="hibernate.c3p0.acquire_increment" value="1" />
			<property name="hibernate.c3p0.idle_test_period" value="3000" />
			<property name="hibernate.c3p0.max_statements" value="50" />
			<property name="hibernate.c3p0.timeout" value="300" />

			<property name="hibernate.dialect"
				value="org.hibernate.spatial.dialect.postgis.PostgisDialect" />

			<property name="javax.persistence.jdbc.driver" value="org.postgis.DriverWrapper" />
			<!-- Ensure Hibernate is congifured for connection pooling -->
			<!-- Tune the connection parameters. http://jdbc.postgresql.org/documentation/head/connect.html -->
			<!-- &logUnclosedConnections=true; -->
			<!-- Consider using Postgres-specific prepareThreshold=int later, to auto-switch 
				to server-side prepared statements. http://jdbc.postgresql.org/documentation/head/server-prepare.html -->
			<!-- datbase set up for arodb -->
			<property name="javax.persistence.jdbc.url"
				value="jdbc:postgresql_postGIS://arodb:5432/aro" />
			<property name="hibernate.default_schema" value="client" />
			<property name="javax.persistence.jdbc.user" value="aro" />
			<property name="javax.persistence.jdbc.password" value="aro" />
			<property name="hibernate.archive.autodetect" value="class" />

			<property name="javax.persistence.validation.mode" value="NONE" />

			<!-- <property name="hibernate.show_sql" value="true" /> -->
			<!-- property name="hibernate.hbm2ddl.auto" value="create" / -->
		</properties>

	</persistence-unit>

</persistence>
